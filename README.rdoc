== README

>>cat ~/.bash_history

MongoDB

>>sudo mkdir -p /data/db

>>sudo chown username /data/db

>>cd

>>pwd

>>touch .bash_profile

>>vim .bash_profile

  export MONGO_PATH=/usr/local/mongodb
  export PATH=$PATH:$MONGO_PATH/bin

##restart terminal

>>mongo -version

Ruby Configuraton

>>rails new raceday

add Mongo gem

  #Add mongoid gem to Gemfile
  gem 'mongoid', '~>5.0.0'

>>bundle

>>rails generate rspec:install

>>rails g mongoid:config

nokogiri problem:

>>xcode-select --install

>>gem install nokogiri

>>gem install nokogiri -- --with-xml2-include=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.11.sdk/usr/include/libxml2 --use-system-libraries

Configuration in raceday/config/locales/application.rb

add

    #bootstraps mongoid within applications -- like rails console
    Mongoid.load!('./config/mongoid.yml')

    #which default ORM are we using with scaffold 
    #add --orm mongoid, or active_record
    # to rails generate cmd line to be specific 
    #config.generators {|g| g.orm :active_record} 
    config.generators {|g| g.orm :mongoid}
    
In Project

  $ rails c
  > Mongoid::Clients.default
  > Racer.mongo_client.database.name
  => "raceday_development"
  > Racer.collection.name
  => "Racer"
 
Load data
  $ rails c
  > file_path="./race_results.json"
  > file=File.read(file_path); nil
  > hash=JSON.parse(file); nil
  > racers=Racer.collection
  > racers.insert_many(hash); nil

Views


  rails g scaffold_controller racer number:integer first_name last_name gender group secs:integer

add routes to views then rake routes

config/routes.rb

  Rails.application.routes.draw do

    resources :racers
    root to: 'racers#index'
